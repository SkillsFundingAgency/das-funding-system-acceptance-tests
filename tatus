[1mdiff --git a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ApprenticeshipsClient.cs b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ApprenticeshipsClient.cs[m
[1mindex 073f098..c908a57 100644[m
[1m--- a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ApprenticeshipsClient.cs[m
[1m+++ b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ApprenticeshipsClient.cs[m
[36m@@ -21,8 +21,9 @@[m [minternal class ApprenticeshipsClient[m
 [m
     public async Task WithdrawApprenticeship(WithdrawApprenticeshipRequestBody body)[m
     {[m
[32m+[m[32m        var token = ServiceBearerTokenProvider.GetServiceBearerToken(_signingKey);[m
         var request = new HttpRequestMessage(HttpMethod.Post, $"api/WithdrawApprenticeship?code={_functionKey}");[m
[31m-        request.Headers.Add("ServiceBearerToken", ServiceBearerTokenProvider.GetServiceBearerToken(_signingKey));[m
[32m+[m[32m        request.Headers.Add("ServiceBearerToken", token);[m
         request.Content = new StringContent(JsonConvert.SerializeObject(body), Encoding.UTF8, "application/json");[m
         var response = await _apiClient.SendAsync(request);[m
 [m
[1mdiff --git a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ClaimsHelper.cs b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ClaimsHelper.cs[m
[1mindex b7dd353..80a55aa 100644[m
[1m--- a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ClaimsHelper.cs[m
[1m+++ b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ClaimsHelper.cs[m
[36m@@ -1,6 +1,8 @@[m
[31m-ï»¿using System.Linq.Expressions;[m
[32m+[m[32mï»¿using System.IdentityModel.Tokens.Jwt;[m
[32m+[m[32musing System.Linq.Expressions;[m
 using System.Reflection;[m
 using System.Security.Claims;[m
[32m+[m[32musing System.Text.Json;[m
 using System.Text.Json.Serialization;[m
 [m
 namespace SFA.DAS.Funding.SystemAcceptanceTests.Helpers.Http;[m
[36m@@ -11,7 +13,7 @@[m [mpublic static class ClaimsHelper[m
     {[m
         var claims = new List<Claim>[m
         {[m
[31m-            new ServiceAccount().CreateClaim(x => x.Sub),[m
[32m+[m[32m            CreateSubClaim(),[m
             CreateExpiryClaim()[m
         };[m
 [m
[36m@@ -20,16 +22,28 @@[m [mpublic static class ClaimsHelper[m
 [m
     private static Claim CreateExpiryClaim()[m
     {[m
[31m-        long unixTime = ((DateTimeOffset)DateTime.UtcNow.AddMinutes(5)).ToUnixTimeSeconds();[m
[32m+[m[32m        long unixTime = ((DateTimeOffset)DateTime.UtcNow.AddMinutes(15)).ToUnixTimeSeconds();[m
         return new Claim("exp", unixTime.ToString());[m
     }[m
 [m
[32m+[m[32m    private static Claim CreateSubClaim()[m
[32m+[m[32m    {[m
[32m+[m[32m        return new Claim("sub", "service-account-id");[m
[32m+[m[32m    }[m
[32m+[m
     private static Claim CreateClaim<T>(this T user, Expression<Func<T, string?>> expression)[m
     {[m
         var value = expression.Compile().Invoke(user);[m
         return new Claim(GetJsonPropertyName<T, string>(expression), value ?? string.Empty);[m
     }[m
 [m
[32m+[m[32m    internal static Claim CreateClaim<T>(this T user, Expression<Func<T, Organisation?>> expression)[m
[32m+[m[32m    {[m
[32m+[m[32m        var organisationValue = expression.Compile().Invoke(user);[m
[32m+[m[32m        var organisationValueAsJson = JsonSerializer.Serialize(organisationValue);[m
[32m+[m[32m        return new Claim(GetJsonPropertyName<T, Organisation?>(expression), organisationValueAsJson, JsonClaimValueTypes.Json);[m
[32m+[m[32m    }[m
[32m+[m
     private static string GetJsonPropertyName<T, TValueType>(Expression<Func<T, TValueType?>> expression)[m
     {[m
         var memberExpression = expression.Body as MemberExpression;[m
[36m@@ -44,4 +58,84 @@[m [mpublic static class ClaimsHelper[m
         var attribute = property.GetCustomAttribute<JsonPropertyNameAttribute>();[m
         return attribute?.Name;[m
     }[m
[32m+[m
[32m+[m[32m    public static List<Claim> GetProviderUserClaims()[m
[32m+[m[32m    {[m
[32m+[m[32m        var providerUser = new ProviderUser();[m
[32m+[m
[32m+[m[32m        var claims = new List<Claim>[m
[32m+[m[32m        {[m
[32m+[m[32m            providerUser.CreateClaim(x => x.Sub),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.Email),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.GivenName),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.FamilyName),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.Organisation),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.Sid),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.PortalComService),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.RoleCode),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.RoleId),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.RoleName),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.RoleNumericId),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.IdentityClaimsName),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.PortalComDisplayName),[m
[32m+[m[32m            providerUser.CreateClaim(x => x.PortalComUkPrn),[m
[32m+[m[32m            CreateExpiryClaim()[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        return claims;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic class ProviderUser[m
[32m+[m[32m{[m
[32m+[m[32m    [JsonPropertyName("sub")][m
[32m+[m[32m    public string? Sub { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("email")][m
[32m+[m[32m    public string? Email { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("given_name")][m
[32m+[m[32m    public string? GivenName { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("family_name")][m
[32m+[m[32m    public string? FamilyName { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("organisation")][m
[32m+[m[32m    public Organisation? Organisation { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("sid")][m
[32m+[m[32m    public string? Sid { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("http://schemas.portal.com/service")][m
[32m+[m[32m    public string? PortalComService { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("rolecode")][m
[32m+[m[32m    public string? RoleCode { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("roleId")][m
[32m+[m[32m    public string? RoleId { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("roleName")][m
[32m+[m[32m    public string? RoleName { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("rolenumericid")][m
[32m+[m[32m    public string? RoleNumericId { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name")][m
[32m+[m[32m    public string? IdentityClaimsName { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("http://schemas.portal.com/displayname")][m
[32m+[m[32m    public string? PortalComDisplayName { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("http://schemas.portal.com/ukprn")][m
[32m+[m[32m    public string? PortalComUkPrn { get; set; }[m
[32m+[m
[32m+[m[32m    [JsonPropertyName("exp")][m
[32m+[m[32m    public int? Expiry { get; set; }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic class Organisation[m
[32m+[m[32m{[m
[32m+[m[32m    [JsonPropertyName("id")][m
[32m+[m[32m    public string? Id { get; set; }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ServiceBearerTokenProvider.cs b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ServiceBearerTokenProvider.cs[m
[1mindex 4e3ad58..684949d 100644[m
[1m--- a/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ServiceBearerTokenProvider.cs[m
[1m+++ b/src/SFA.DAS.Funding.SystemAcceptanceTests/Helpers/Http/ServiceBearerTokenProvider.cs[m
[36m@@ -6,13 +6,13 @@[m [mnamespace SFA.DAS.Funding.SystemAcceptanceTests.Helpers.Http;[m
 [m
 public static class ServiceBearerTokenProvider[m
 {[m
[31m-    private const int ExpiryTime = 5;[m
[32m+[m[32m    private const int ExpiryTime = 15;[m
 [m
     public static string GetServiceBearerToken(string? signingKey)[m
     {[m
         ValidateSigningKey(signingKey);[m
 [m
[31m-        var claims = ClaimsHelper.GetServiceAccountClaims();[m
[32m+[m[32m        var claims = ClaimsHelper.GetProviderUserClaims();[m
 [m
         var key = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(signingKey!));[m
         var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256Signature);[m
[1mdiff --git a/src/SFA.DAS.Funding.SystemAcceptanceTests/appsettings.ProjectConfig.json b/src/SFA.DAS.Funding.SystemAcceptanceTests/appsettings.ProjectConfig.json[m
[1mindex 7cca237..197f8b8 100644[m
[1m--- a/src/SFA.DAS.Funding.SystemAcceptanceTests/appsettings.ProjectConfig.json[m
[1m+++ b/src/SFA.DAS.Funding.SystemAcceptanceTests/appsettings.ProjectConfig.json[m
[36m@@ -1,5 +1,5 @@[m
 ï»¿{[m
[31m-  "EnvironmentName": "LOCAL",[m
[32m+[m[32m  "EnvironmentName": "TEST2",[m
   "ShouldReleasePayments": true,[m
   "ShouldCleanUpTestRecords": false,[m
   "SharedServiceBusFqdn": "__SharedServiceBusInstance__",[m
